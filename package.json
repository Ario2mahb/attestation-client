{
  "name": "Attestation-Suite",
  "version": "1.0.0",
  "repository": "https://github.com/flare-foundation/attestation-client.git",
  "author": "flare",
  "license": "MIT",
  "prettier": {
    "trailingComma": "es5",
    "tabWidth": 2,
    "printWidth": 160,
    "semi": true,
    "singleQuote": false
  },
  "lint-staged": {
    "src/**/*.{js,jsx,ts,tsx,json,css,scss,md}": [
      "lint-check"
    ]
  },
  "engines": {
    "node": ">=12.0.0"
  },
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "yarn tsc",
    "-------LINT------": "",
    "lint": "yarn prettier -w 'src/**/*.{ts,tsx}' --config ./package.json",
    "lint-check": "yarn prettier -c 'src/**/*.{ts,tsx}' --config ./package.json",
    "lint2": "tslint -c tslint.json -p tsconfig.json --fix",
    "-------DOCKER------": "",
    "docker-build": "bash scripts/docker-build.sh",
    "docker-deploy": "bash scripts/docker-deploy.sh",
    "-------SOLIDITY------": "",
    "typechain-web3-v1": "yarn typechain --target=web3-v1 --out-dir typechain-web3-v1 \"artifacts/!(build-info)/**/+([a-zA-Z0-9_]).json\" 1> nul",
    "typechain-truffle-v5": "yarn typechain --target=truffle-v5 --out-dir typechain-truffle \"artifacts/!(build-info)/**/+([a-zA-Z0-9_]).json\" 1> nul",
    "compile": "yarn hardhat compile && yarn typechain-truffle-v5 && yarn typechain-web3-v1",
    "c": "yarn compile",
    "deploy": "yarn hardhat run scripts/deploy.ts --network local",
    "stateconnector": "yarn hardhat run scripts/deploy.ts --network scdev",
    "-------CODE-GEN------": "",
    "codegen": "env NODE_ENV=development yarn ts-node src/verification/codegen/codegen.ts",
    "-------DEV-MAIN------": "",
    "devindexer": "env NODE_ENV=development yarn ts-node src/runIndexer.ts",
    "devverifierserver": "env NODE_ENV=development VERIFIER_TYPE=btc yarn ts-node src/runVerifierServer.ts",
    "devattester": "env SECURE_CONFIG_NETWORK=Coston2 NODE_ENV=development CREDENTIALS_KEY=direct:t3stPassw0rd yarn ts-node src/runAttestationClient.ts",
    "devwebserver": "env NODE_ENV=development yarn ts-node src/runWebserver.ts",
    "-------DEV-RUNNERS------": "",
    "prewatch-and-run": "npm-run-all typechain-web3-v1",
    "watch-and-run": "ts-node-dev --notify --respawn -- src/runAttesterClient.ts",
    "watch-and-run-alerts": "ts-node-dev --trace-warnings --notify --respawn -- src/alerts/alerts.ts",
    "devprod": "env CONFIG_PATH=prod NODE_ENV=production node dist/src/runAttesterClient.js",
    "devalerts": "env CONFIG_PATH=.secure.dev DOTENV=DEV yarn watch-and-run-alerts",
    "devspammer_old": "env DOTENV=DEV DOTENV_INCLUDE=\".indexer.remote.dev.read.env\" yarn ts-node-dev --notify --respawn -- src/spammer/attestation-spammer.ts -- -c XRP -r http://127.0.0.1:9650/ext/bc/C/rpc  -a artifacts/contracts/StateConnector.sol/StateConnector.json -t $(cat .stateconnector-address) -b 1 -o 1 -f 1 -d 1000 -l XRP -k test-1020-accounts.json",
    "devspammer": "env CONFIG_PATH=.secure.dev NODE_ENV=development yarn ts-node-dev --notify --respawn -- src/spammer/attestation-spammer.ts -- -c ALGO",
    "devctail": "env CONFIG_PATH=dev NODE_ENV=development yarn ts-node-dev --notify --respawn src/tools/ctail/ctail.ts",
    "devconfig": "yarn ts-node-dev --notify --respawn src/attester/configvalidate.ts",
    "devadmin": "env DOTENV=DEV CONFIG_PATH=.secure.dev yarn ts-node src/admin/admin.ts",
    "devinstall": "env DOTENV=DEV CONFIG_PATH=.secure.dev yarn ts-node src/install/install.ts ../attestation-suite-config/",
    "devinstallfile": "env JSON_CONFIG_PATH=../attestation-suite-config/  yarn ts-node src/install/install-file.ts -i ./scripts/files/frontend.env -o ./scripts/files/frontend.env.out   -r HOSTNAME -w www.something.com -c Coston",
    "devinstallsecurecommand": "env JSON_CONFIG_PATH=../attestation-suite-config/  yarn ts-node src/install/secureCommand -a installNodesTestNet",
    "devsecurecredentials": "yarn ts-node src/install/secureCredentials.ts -a direct:t3stPassw0rd",
    "-------MONITORING---------": "",
    "admin": "env CONFIG_PATH=.secure node dist/src/admin/admin.js",
    "-------TESTS---------": "",
    "htest": "env NODE_ENV=development yarn codegen && yarn c && yarn hardhat test test/HashTest.test.ts",
    "test": "env NODE_ENV=development mocha -r ts-node/register -t 0 --exit",
    "test-all-contracts": "env NODE_ENV=development yarn hardhat test test/**/*.test-contract.ts",
    "test-all-other": "env NODE_ENV=development mocha -r ts-node/register -t 0 --exit 'test/**/*.test.ts'",
    "test-all-fast": "env NODE_ENV=development npm-run-all test-all-contracts test-all-other",
    "test-all-slow": "env NODE_ENV=development mocha -r ts-node/register -t 0 --exit 'test/**/*.test-slow.ts'",
    "test-all-cred": "env NODE_ENV=development mocha -r ts-node/register -t 0 --exit 'test/**/*.test-cred.ts'",
    "test-all-full": "env NODE_ENV=development npm-run-all test-all-contracts  test-all-slow test-all-other",
    "test-all-fullc": "env NODE_ENV=development npm-run-all test-all-contracts test-all-other test-all-slow test-all-cred",
    "test:coverage": "env NODE_ENV=development nyc yarn test-all-fast",
    "test:coverage-full": "env NODE_ENV=development nyc yarn test-all-full",
    "test:coverage-fullc": "env NODE_ENV=development nyc yarn test-all-fullc",
    "atest": "env NODE_ENV=development yarn hardhat run scripts/generateAttestationRequest.ts --network local",
    "-------NEST---------": "",
    "devverifierbtc2": "env NODE_ENV=development VERIFIER_TYPE=btc yarn nest start verifier-server --debug --watch",
    "devwebserver_nest": "env CONFIG_PATH=.secure.dev NODE_ENV=development yarn nest start web-server --debug --watch",
    "-------BACKEND-------": "",
    "preroutes": "ts-node lib/scripts/create-routes-folder.ts",
    "routes": "yarn tsoa routes && yarn tsoa spec",
    "predevbackend": "yarn routes",
    "devbackend": "env CONFIG_PATH=.secure.dev NODE_ENV=development yarn ts-node-dev --notify --respawn -- lib/webserver/server.ts",
    "-------DOCS_GEN------": "",
    "generateDocs": "yarn typedoc --options typedoc.config.json",
    "-------SC-finalizing-bot------": "",
    "deployTempStateConnector": "yarn ts-node -r dotenv/config src/state-collector-finalizer/deploy-temp-state-connector.ts -r 'https://coston2-api.flare.network/ext/C/rpc'",
    "deployTempTranStateConnector": "yarn ts-node -r dotenv/config src/state-collector-finalizer/deploy-temp-state-connector.ts -f tran -r 'https://coston2-api.flare.network/ext/C/rpc'",
    "runFinalizingBot": "yarn ts-node -r dotenv/config src/state-collector-finalizer/main.ts -a '0xB6fF182DB28C3aD8f0611d59b183BFC40AF5268d' -r 'https://coston2-api.flare.network/ext/C/rpc'",
    "runFinalizingBotTran": "yarn ts-node -r dotenv/config src/state-collector-finalizer/main.ts -a '0xd035F05E6d159F7DE00809f8E3bAb809Cd33bACA' -f tran -r 'https://coston2-api.flare.network/ext/C/rpc'",
    "--------INTEGRATION-TESTS------": "",
    "test_endtoend": "concurrently -r -k --success first \"yarn hardhat node > nul\" \"wait-on http://127.0.0.1:8545 && yarn test test/integration/attester-client-full-synthetic.test-integration.ts\""
  },
  "dependencies": {
    "@flarenetwork/mcc": "2.0.8",
    "@google-cloud/secret-manager": "4.2.0",
    "@nestjs/common": "^9.0.0",
    "@nestjs/core": "^9.0.0",
    "@nestjs/passport": "^9.0.0",
    "@nestjs/platform-express": "^9.0.0",
    "@nestjs/platform-ws": "^9.1.4",
    "@nestjs/swagger": "^6.1.2",
    "@nestjs/typeorm": "^9.0.1",
    "@nestjs/websockets": "^9.1.4",
    "@openzeppelin/contracts": "4.5.0",
    "assert": "2.0.0",
    "body-parser": "1.20.0",
    "clarinet": "0.12.5",
    "compression": "1.7.4",
    "cookie-parser": "1.4.6",
    "event-stream": "4.0.1",
    "express": "4.18.1",
    "glob": "8.0.3",
    "helmet": "5.1.0",
    "multer": "^1.4.5-lts.1",
    "mysql2": "2.3.3",
    "node-disk-info": "1.3.0",
    "passport": "^0.6.0",
    "passport-headerapikey": "^1.2.2",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.2.0",
    "safe-stable-stringify": "2.4.1",
    "single-instance": "0.0.1",
    "tail": "2.2.4",
    "typeorm": "^0.3.10",
    "web3": "^1.8.2",
    "web3-utils": "^1.8.2",
    "winston": "3.7.2",
    "yargs": "17.6.0"
  },
  "devDependencies": {
    "@istanbuljs/nyc-config-typescript": "1.0.2",
    "@knodes/typedoc-plugin-pages": "^0.23.1",
    "@nestjs/cli": "^9.0.0",
    "@nestjs/schematics": "^9.0.0",
    "@nestjs/testing": "^9.0.0",
    "@nomiclabs/hardhat-truffle5": "2.0.6",
    "@nomiclabs/hardhat-web3": "2.0.0",
    "@openzeppelin/test-helpers": "0.5.15",
    "@typechain/hardhat": "6.1.0",
    "@typechain/truffle-v5": "7.0.0",
    "@typechain/web3-v1": "3.1.0",
    "@types/assert": "1.5.6",
    "@types/body-parser": "1.19.2",
    "@types/chai": "4.3.3",
    "@types/chai-as-promised": "7.1.5",
    "@types/clarinet": "^0.12.1",
    "@types/cookie-parser": "1.4.3",
    "@types/express": "4.17.13",
    "@types/glob": "7.2.0",
    "@types/helmet": "4.0.0",
    "@types/mocha": "9.1.1",
    "@types/node": "17.0.42",
    "@types/passport": "^1.0.11",
    "@types/passport-http": "^0.3.9",
    "@types/rimraf": "^3.0.2",
    "@types/sinon": "10.0.13",
    "@types/tail": "^2.2.1",
    "@types/wait-on": "^5.3.1",
    "@types/web3": "1.2.2",
    "@types/ws": "^8.5.3",
    "@types/yargs": "17.0.10",
    "@typescript-eslint/eslint-plugin": "^5.41.0",
    "@typescript-eslint/parser": "^5.41.0",
    "axios": "0.27.2",
    "better-sqlite3": "^8.0.1",
    "chai": "^4.3.6",
    "chai-as-promised": "^7.1.1",
    "concurrently": "^7.6.0",
    "eslint": "^8.26.0",
    "eslint-plugin-node": "^11.1.0",
    "fs-extra": "10.1.0",
    "hardhat": "2.9.9",
    "npm-run-all": "4.1.5",
    "nyc": "15.1.0",
    "prettier": "2.6.2",
    "prettier-plugin-solidity": "^1.0.0-beta.24",
    "rimraf": "3.0.2",
    "sinon": "^15.0.0",
    "ts-loader": "^9.4.1",
    "ts-node": "10.9.1",
    "ts-node-dev": "2.0.0",
    "tslint": "6.1.3",
    "typechain": "5.1.2",
    "typedoc": "^0.23.14",
    "typedoc-plugin-merge-modules": "^4.0.1",
    "typescript": "4.6.2",
    "util": "^0.12.5",
    "wait-on": "^7.0.1"
  },
  "nyc": {
    "extends": "@istanbuljs/nyc-config-typescript",
    "check-coverage": true,
    "all": true,
    "include": [
      "src/**/!(*.test.*).[tj]s?(x)"
    ],
    "exclude": [
      "src/admin/**/*.*",
      "src/indexed-query-manager/random-attestation-requests/**/*.*",
      "src/install/**/*.*",
      "src/servers/web-server/src/dtos/**/*.*",
      "src/spammer/**/*.*",
      "src/verification/codegen/**/*.*",
      "src/webserver/**/*.*",
      "src/indexed-query-manager/indexed-query-manager-types.ts",
      "src/entity/**/*.*",
      "src/utils/instanciate.ts",
      "src/scripts/**/*.*",
      "src/state-collector-finalizer/**/*.*",
      "src/run*.ts",
      "src/monitor/**/*.*",
      "src/**/main.ts"
    ],
    "reporter": [
      "html",
      "lcov",
      "text",
      "text-summary"
    ],
    "report-dir": "coverage"
  }
}
